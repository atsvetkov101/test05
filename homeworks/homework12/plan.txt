
Цель: Реализуем эффективный перебор всех игровых объектов, для определения всех возможных коллизий в игре в каждый момент времени.

Термины:
1) объект игры gameObject обладает координатами x, y. 
   Коодинаты объекта показывают положение центра объекта на игровом поле.
2) игровое поле(gameArea) - координатное поле прямоугольного размера 0<x<10 0<y<10
3) окрестность(area) - это область прямоугольной формы - часть игрового поля. 
   В окрестности может находиться игровой объект или нет. В окрестности может находиться несколько игровых объектов.
   Окрестность характеризуется координатами x: (x1,x2); y: (y1,y2). 
4) Система окрестностей(AreaSystem) - массив окрестностей, который покрывает все поле игры. 
   Для вычисления коллизий используется две системы окрестностей, сдвинутые, друг относительно друга.

Инициализация(InitAreaCommand):
1) инициализируем систему окрестностей AreaSystem1
2) инициализируем систему окрестностей AreaSystem2
3) генерируем множество объектов игры, находящихся в координатном поле игры
4) для каждого объекта игры вычисляем его окрестность Area для AreaSystem1. Информация о окрестности хранится в AreaSystem. (AreaSystem.getArea(this.gameObject))
5) для каждого объекта игры вычисляем его окрестность Area для AreaSystem1. Информация о окрестности хранится в AreaSystem. (AreaSystem.getArea(this.gameObject))
6) формируем список комманд для обработки очереди команд игры ProcessingQueueCommand
 4.1) добавляем в очередь команды PrepareListOfChecksCommand для всех объектов для AreaSystem1
 4.2) добавляем в очередь команды PrepareListOfChecksCommand для всех объектов для AreaSystem2
5) запускаем обработку очереди команд ProcessingQueueCommand


Процесс формирования перебора, т.к. списка проверок:
1) Цикл по всем окрестностям AreaSystem1. Если больше 1 объекта, то для каждого объекта формируем PrepareListOfChecksCommand
2) Цикл по всем окрестностям AreaSystem2. Если больше 1 объекта, то для каждого объекта формируем PrepareListOfChecksCommand

PrepareListOfChecksCommand - комманда, которая уточняет окрестность для объекта игры и формирует макро-команды для проверки коллизий.
  - gameObject - объект игры
  - Area - текущая окрестность объекта игры хранится в AreaSystem(AreaSystem.getArea(this.gameObject))
  - AreaSystem - система окрестностей(одна система на одну каманду PrepareListOfChecksCommand)
  - execute() - метод, который выполняет работу - формирование списка проверок
    1) newArea = AreaSystem.getArea(this.gameObject) - вычисляем окрестность объекта игры
       - если окрестность не определена для объекта, то вычисляем ее и возвращаем.
       - если объект попал в новую окрестность, то удаляет его из списка объектов старой окрестности и добавляет список объектов новой окрестности.
    2) Выбираем список объектов игры из текущей окрестности, кроме выбраного 
      - если нет других объектов в окрестности, то выходим.
    3) Записываем проверки, которые нужно выполнить:
      - Формитруем пары (текущий объект, другой объект) и заполняем макро-команду CheckCollisionAreaCommand
      - добавляем макро-команду CheckCollisionAreaCommand в список выполняемых команд.

CheckCollisionAreaCommand - макро-комманда, которая проверяет коллизию между одним объектом и другими объектами игры в данной окрестности.
   - для каждого объекта игры вычисляем коллизию с выбранным объектом игры.
     CollisionDetector.detect(gameObject1Point, gameObject2); (считать сколько раз был вызван метод)
   - Записываем информацию о коллизии
     CollisionSystem.addCollision(gameObject1, gameObject2);









